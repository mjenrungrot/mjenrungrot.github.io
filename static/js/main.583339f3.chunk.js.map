{"version":3,"sources":["components/Template/Info.js","layouts/Main.js","views/Index.js","serviceWorker.js","index.js","data/cv.pdf"],"names":["Info","react_default","a","createElement","id","className","Link","to","CV","target","Main","classes","this","props","index_es","position","menuButton","color","aria-label","Menu_default","variant","grow","children","Template_Info","React","Component","defaultProps","withStyles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","palette","text","secondary","marginLeft","marginRight","Index","layouts_Main","href","Boolean","window","location","hostname","match","require","document","title","body","style","margin","ReactDOM","render","BrowserRouter","Switch","Route","path","exact","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"yUA8BeA,EAxBF,kBACXC,EAAAC,EAAAC,cAAA,WAASC,GAAG,WACVH,EAAAC,EAAAC,cAAA,WAASC,GAAG,SAAZ,0BACAH,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBACjBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,iDACwC,IACtCF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAIC,IAAIC,OAAO,SAArB,QAFF,MASFR,EAAAC,EAAAC,cAAA,WAASC,GAAG,UACVH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBCWFO,mLACK,IACCC,EAAYC,KAAKC,MAAjBF,QAER,OACEV,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,SAAS,UACfd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACET,UAAWM,EAAQK,WACnBC,MAAM,UACNC,aAAW,QAEXjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,OAEFD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYM,QAAQ,KAAKH,MAAM,UAAUZ,UAAWM,EAAQU,MAA5D,oBAGApB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQG,MAAM,WAAd,WAGJhB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQQ,KAAKC,MAAMS,UAC3BrB,EAAAC,EAAAC,cAACoB,EAAD,cAtBWC,IAAMC,WAgCzBf,EAAKgB,aAAe,CAClBJ,SAAU,MAGGK,2BAtDA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,GAEZT,KAAM,CACJS,SAAU,GAEZC,MAAO,CACLC,QAA8B,EAArBJ,EAAMK,QAAQC,KACvBC,UAAW,SACXlB,MAAOW,EAAMQ,QAAQC,KAAKC,WAE5BtB,WAAY,CACVuB,YAAa,GACbC,YAAa,MAwCFb,CAAmBjB,GC5CnB+B,EApBD,kBACZxC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAAA,WAASE,UAAU,OAAOD,GAAG,SAC3BH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sEAGJF,EAAAC,EAAAC,cAAA,4EACAF,EAAAC,EAAAC,cAAA,SACG,IADH,mBAEmB,IACjBF,EAAAC,EAAAC,cAAA,KAAGwC,KAAK,wDAAR,SAXJ,OCIgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,EAAQ,KAERC,SAASC,MAAQ,0CACjBD,SAASE,KAAKC,MAAMC,OAAS,IAC7BC,IAASC,OACPvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,KACExD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrB,MAGrCS,SAASa,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEpInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.583339f3.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport CV from \"../../data/cv.pdf\";\n\nconst Info = () => (\n  <section id=\"sidebar\">\n    <section id=\"intro\">mjenrungrot[at]hmc.edu</section>\n    <section className=\"short_description\">\n      <h2>About</h2>\n      <p>Hello, I'm Teerapat Jenrungrot, a senior at Harvey Mudd College.</p>\n      <p>\n        To view my current CV, take a look at{\" \"}\n        <Link to={CV} target=\"_self\">\n          here\n        </Link>\n        .\n      </p>\n    </section>\n\n    <section id=\"footer\">\n      <ul>\n        <li>LinkedIn</li>\n        <li>GitHub</li>\n      </ul>\n    </section>\n  </section>\n);\n\nexport default Info;\n","// @flow\n\n/* eslint-disable require-jsdoc */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Info from \"../components/Template/Info\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n});\n\nclass Main extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div id=\"wrapper\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Personal Webpage\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n        <div id=\"main\">{this.props.children}</div>\n        <Info />\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nMain.defaultProps = {\n  children: null\n};\n\nexport default withStyles(styles)(Main);\n","// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\n// eslint-disable-next-line no-unused-vars\nimport ReactDOM from \"react-dom\";\n\nimport Main from \"../layouts/Main\";\n\nconst Index = () => (\n  <Main>\n    <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2>About this site</h2>\n          <p>A beautiful, responsive, react app written with ES2016.</p>\n        </div>\n      </header>\n      <p> Welcome to my website. Please feel free to read more about me </p>\n      <p>\n        {\" \"}\n        Source available{\" \"}\n        <a href=\"https://github.com/mjenrungrot/mjenrungrot.github.io\">here</a>\n      </p>\n      .\n    </article>\n  </Main>\n);\n\nexport default Index;\n","/* eslint-disable require-jsdoc */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"; //eslint-disable-line\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"typeface-roboto\";\n\n// Pages\nimport Index from \"./views/Index\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// CSS\nrequire(\"./static/css/main.scss\");\n\ndocument.title = \"Personal Webpage -- Teerapat Jenrungrot\";\ndocument.body.style.margin = \"0\";\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Index} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cv.5c141c13.pdf\";"],"sourceRoot":""}